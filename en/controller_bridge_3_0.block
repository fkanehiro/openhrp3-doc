title = How to use Controller-Bridge
base  = ..


<h2>Overview</h2>

<p>
The controller bridge is the process which manage input/outputs(I/O) between the simulating model 
and each OpenRTM component.The I/O port is set and the connection between ports is specified 
by the start option or using the configuration file.
</p>


<h2> Manual </h2>
<h3>Start-Options</h3>

<p>
The start-options are as follows;

<table border="1" align="center">
 <tr>
  <td>Start option (format)</td>
  <td>Explanation</td>
 </tr>
 <tr>
  <td>--module &lt;<i>module file</i>&gt;[:&lt;<i>Initialization function</i>&gt;]</td>
  <td>Specifies the module file.</td>
 </tr>
 <tr>
  <td>--server-name &lt;<i>controller</i>&gt;</td>
  <td>The name of the factory server that generates the component to the CORBA name server</td>
 </tr>
 <tr>
  <td>--in-port &lt;<i>port</i>&gt;[:&lt;<i>joint id</i>&gt;]:&lt;<i>property</i>&gt;</td>
  <td>Specifies the input port name and its property</td>
 </tr>
 <tr>
  <td>--out-port &lt;<i>port</i>&gt;[:&lt;<i>joint id</i>&gt;]:&lt;<i>property</i>&gt;</td>
  <td>Specifies the output port name and its property</td>
 </tr>
 <tr>
  <td>--connection &lt;<i>port</i>&gt;[:&lt;<i>controller instance</i>&gt;]:&lt;<i>port</i>&gt;</td>
  <td>Specifies the connection between ports</td>
 </tr>
 <tr>
  <td>-h / --help</td>
  <td>Display start-options list</td>
 </tr>
 <tr>
  <td>--config-file &lt;<i>configuration file</i>&gt;</td>
  <td>Specifies the file that configures start-options</td>
 </tr>
 <tr>
  <td>--robot-name &lt;<i>targeted model</i>&gt;</td>
  <td>Specifies the targeted model.</td>
 </tr>
 <tr>
  <td>--name-server &lt;<i>name server host</i>&gt;:&lt;<i>port</i>&gt;</td>
  <td>Specifies OpenHRP's CORBA name server.</td>
 </tr>
</table>
<center>Table 1: Start Options List</center>
</p>

<p>
<b>--module &lt;<i>module file</i>&gt;[:&lt;<i>Initialization function</i>&gt;]</b><br>
Used to specify the model file generated by compiling the component, and the <i>initialization 
function name</i> if necessary.<br>
Default value of <i>initialization function name</i> is "<i>module file name</i>"+"<i>Init</i>".<br>
Module files (files having ".so" extensions in UNIX environments and ".dll" extensions in 
Windows environment) are loaded automatically omitting their extension.<br>
Ex: --module SamplePD<br>
This will load "SamplePD.dll" in Windows, or "SamplePD.so" in UNIX, and call the initialization 
function "SamplePDInit".
</p>

<p>
<b>--server-name &lt;<i>controller</i>&gt;</b><br>
This option used to specify the name of the factory server that generates the CORBA 
component of the bridge. To view controller settings, go to "OpenHRP" &rarr; "controller" tab 
in GrxUI and select the particular controller from "Controller" drop-down list.
  <center>
    <img src="../image/GrxUI_controller2.png" align="top"><br>Fig.1: GrxUI controller tab
  </center>
</p>

<p>
<b>--in-port &lt;<i>port</i>&gt;[:&lt;<i>joint id</i>&gt;]:&lt;<i>property</i>&gt;</b><br>
This option allows you to sepecify <i>input port name</i> and its <i>property name</i>. If 
the <i>joint id name</i> is specified, only the value of a specific part will be input.<br>
Here the <i>joint id name</i> means <i>joint node name</i> of the <a href="./create_model.html">VRML Model</a>.<br>
Ex: --in-port r_arm_elbow:RARM_ELBOW:JOINT_VALUE<br>
Value of the JOINT_VALUE property, of RARM_ELBOW joint is input.
</p>

<p>
<b>--out-port &lt;<i>port</i>&gt;[:&lt;<i>joint id</i>&gt;]:&lt;<i>property</i>&gt;</b><br>
This option allows you to sepecify <i>output port name</i> and its <i>property name</i>. If 
the <i>joint id name</i> is specified, only the value of a specific part will be output.<br>
Here the <i>joint id name</i> means <i>joint node name</i> of the <a href="./create_model.html">VRML Model</a>.<br>
If the output contains image data, <i>sensorId</i> value of VisionSensor must be specified, 
instead of the <i>joint id name</i>.<br>
Ex: --out-port image:0:COLOR_IMAGE<br>
Outputs the color image taken by VisionSensor, which is <i>sensorId</i> is 0.
</p>

<p>
<b>--connection &lt;<i>port</i>&gt;[:&lt;<i>controller instance</i>&gt;]:&lt;<i>port</i>&gt;</b><br>
This is used to specify connection between I/O ports. Specify the <i>port name</i> of targeted model 
at left, and the <i>port name</i> of controller at right, delimited by colon.<br>
The <i>controller instance name</i> can be omitted.<br>
Ex: --connection angle:JoystickController0:angle<br>
Connects the port(angle) of the targeted model with the port(angle) of the JoystickController0 
instance.
</p>

<p>
<b>-h / --help</b><br>
This option displays a list of start-options that can be used, and their explanations,in English.<br>
You may use either -h or --help.
</p>

<p>
<b>--config-file &lt;<i>configuration file</i>&gt;</b><br>
Used to specify the file that configures start-options. You may use this for unifying start-options 
and complex I/O port configurations. Please refer the configuration file "bridge.conf" in the sample 
controllers' folder. <font color="red">(NOTE)</font><br>
Format of <i>OpenHRP/Controller/rtc/SamplePD/bridge.conf</i> is as follows;

<pre>
server-name = SamplePDController
in-port     = torque:JOINT_TORQUE
out-port    = angle:JOINT_VALUE
connection  = angle:angle
connection  = torque:torque
module      = SamplePD
</pre>

The content of the text file is basically collection of start-options having removed hyphen(-) 
and specified string values for each using '='. The space and tab letter that surrounds '=' from 
left and right, will be neglected. Considering the operation on UNIX environments, it is much 
safer to use LF as line-feed code even on Windows environments; so then it would be compatible 
for both platforms.<br>
<font color="red">NOTE:<br>
This file is not available on versions prior to Ver3.0.0. And a part of files' format was 
changed with Ver3.0.2. So we recommand you to upgrade your OpenHRP version to the latest.
</font>
</p>

<p>
<b>--robot-name &lt;<i>targeted model</i>&gt;</b><br>
Specifies the name of the targeted model(equiped with I/O ports) that has to communicate with. 
The default value is "<i>VirtualRobot</i>". Considering the generation of multiple instances, 
its name is appended with an index number starting from 0. Therefore "TargetedModelName0" will 
be the first instance to register in the nameserver.
</p>

<p>
<b>--name-server &lt;<i>name server host</i>&gt;</b><br>
Specifies the CORBA name server of OpenHRP.<br>
Default value is "<i>localhost:2809</i>".<br>
Ex: --name-server 192.168.1.10:2809<br>
Specifies the CORBA name server of OpenHRP that has been connected and waiting through port 2809 
of ip address 192.168.1.10 .
</p>
<br>


<h3>Property</h3>

<p>
Properties that can be specified in the above start-options are as follows;

<table border="1" align="center">
 <tr>
  <td>Property</td>
  <td>In Port / Out Port</td>
  <td>Joint datatype</td>
  <td>Explanation</td>
 </tr>
 <tr>
  <td>JOINT_VALUE</td>
  <td>yes/yes</td>
  <td>double</td>
  <td>Joint-angle or Joint-location</td>
 </tr>
 <tr>
  <td>JOINT_VELOCITY</td>
  <td>yes/yes</td>
  <td>double</td>
  <td>Differentiation of JOINT_VALUE</td>
 </tr>
 <tr>
  <td>JOINT_ACCELERATION</td>
  <td>yes/yes</td>
  <td>double</td>
  <td>2<sup>nd</sup> differentiation of JOINT_VALUE</td>
 </tr>
 <tr>
  <td>JOINT_TORQUE</td>
  <td>yes/yes</td>
  <td>double</td>
  <td>Joint-torque</td>
 </tr>
 <tr>
  <td>EXTERNAL_FORCE</td>
  <td>yes(&lowast;1) /no</td>
  <td>double*6</td>
  <td>Force, Torque</td>
 </tr>
 <tr>
  <td>ABS_TRANSFORM</td>
  <td>yes(&lowast;1) /no</td>
  <td>double*12</td>
  <td>Joint-location(1<sup>st</sup> 3 elements are positions vectors, 9 elements are for posture)</td>
 </tr>
 <tr>
  <td>FORCE_SENSOR</td>
  <td>no/yes</td>
  <td>double*6</td>
  <td>Force, Torque</td>
 </tr>
 <tr>
  <td>RATE_GYRO_SENSOR</td>
  <td>no/yes</td>
  <td>double*3</td>
  <td>Gyro-Sensor (3D vector)</td>
 </tr>
 <tr>
  <td>ACCELERATION_SENSOR</td>
  <td>no/yes</td>
  <td>double*3</td>
  <td>Acceleration Sensor (3D vector)</td>
 </tr>
 <tr>
  <td>COLOR_IMAGE(&lowast;3)</td>
  <td>no/yes(&lowast;2)</td>
  <td>long*ImageSize</td>
  <td>color image</td>
 </tr>
 <tr>
  <td>GRAYSCALE_IMAGE(&lowast;3)</td>
  <td>no/yes(&lowast;2)</td>
  <td>octet*ImageSize</td>
  <td>gray-scale image</td>
  </tr>
 <tr>
  <td>DEPTH_IMAGE(&lowast;3)</td>
  <td>no/yes(&lowast;2)</td>
  <td>float*ImageSize</td>
  <td>depth image</td>
 </tr>
</table>
<center>Table 2: Property List</center><br>
&lowast;1: Becomes enable when [:Joint-ID] is specified in in-port option<br>
&lowast;2: Becomes enable when [:sensorId] is specified in out-port option<br>
&lowast;3: Supports with Ver3.0.3 or later
</p>
<br>
<br>